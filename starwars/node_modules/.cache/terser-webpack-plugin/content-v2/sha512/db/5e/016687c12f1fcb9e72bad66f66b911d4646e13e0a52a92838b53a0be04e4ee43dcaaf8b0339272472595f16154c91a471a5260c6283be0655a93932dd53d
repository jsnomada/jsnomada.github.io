{"map":"{\"version\":3,\"sources\":[\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/swlogo.png\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/Card.js\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/CardList.js\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/SearchBox.js\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/App.js\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/serviceWorker.js\",\"/home/hyj/Desktop/kentoushi/kentoushi.github.io/starwars/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Card\",\"_ref\",\"name\",\"height\",\"mass\",\"hair_color\",\"eye_color\",\"birth_year\",\"gender\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"CardList\",\"people\",\"map\",\"user\",\"i\",\"src_Card\",\"key\",\"homeland\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"console\",\"log\",\"state\",\"_this2\",\"fetch\",\"then\",\"resp\",\"json\",\"results\",\"concat\",\"_this3\",\"filterPeople\",\"filter\",\"toLowerCase\",\"includes\",\"src\",\"require\",\"alt\",\"width\",\"src_SearchBox\",\"src_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"sHAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gKCgBzBC,SAdF,SAAAC,GAAyE,IAAvEC,EAAuED,EAAvEC,KAAMC,EAAiEF,EAAjEE,OAAQC,EAAyDH,EAAzDG,KAAMC,EAAmDJ,EAAnDI,WAAYC,EAAuCL,EAAvCK,UAAWC,EAA4BN,EAA5BM,WAAYC,EAAgBP,EAAhBO,OAAgBP,EAARQ,GAC7E,OACCC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,sDACdH,EAAAC,EAAAC,cAAA,KAAA,KAAKV,GACLQ,EAAAC,EAAAC,cAAA,KAAA,KAAA,WAAaT,GACbO,EAAAC,EAAAC,cAAA,KAAA,KAAA,SAAWR,GACXM,EAAAC,EAAAC,cAAA,KAAA,KAAA,gBAAkBP,GAClBK,EAAAC,EAAAC,cAAA,KAAA,KAAA,eAAiBL,GACjBG,EAAAC,EAAAC,cAAA,KAAA,KAAA,eAAiBN,GACjBI,EAAAC,EAAAC,cAAA,KAAA,KAAA,WAAaJ,MCqBDM,EA7BE,SAAAb,GAAgB,IAAbc,EAAad,EAAbc,OACnB,OACCL,EAAAC,EAAAC,cAAA,MAAA,KAEEG,EAAOC,IAAI,SAACC,EAAMC,GAClB,OACAR,EAAAC,EAAAC,cAACO,EAAD,CACAC,IAAKF,EACLhB,KAAMa,EAAOG,GAAGhB,KAChBmB,SAAUN,EAAOG,GAAGG,SACpBjB,KAAMW,EAAOG,GAAGd,KAChBI,OAAQO,EAAOG,GAAGV,OAClBF,UAAWS,EAAOG,GAAGZ,UACrBD,WAAYU,EAAOG,GAAGb,WACtBF,OAAQY,EAAOG,GAAGf,OAClBI,WAAaQ,EAAOG,GAAGX,iBCHZe,EAbG,SAAArB,GAAiCA,EAA/BsB,YAA+B,IAAlBC,EAAkBvB,EAAlBuB,aAChC,OACCd,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,QAAA,CACAC,UAAU,mCACVY,KAAK,SACLC,YAAY,wBACZC,SAAUH,MCkCEI,cArCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAgBFI,eAAiB,SAACC,GACdR,EAAKS,SAAS,CAAEf,YAAac,EAAME,OAAOC,QAC1CC,QAAQC,IAAIL,EAAME,OAAOC,QAjB3BX,EAAKc,MAAQ,CACX5B,OAAQ,GACRQ,YAAa,IAJHM,mFAQM,IACdX,EADc0B,EAAAZ,KAElB,IAAKd,EAAE,EAAEA,EAAI,EAAEA,IACZ2B,MAAM,qCAAuC,CAAC3B,IAC9C4B,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAG,GAAO,OAAIL,EAAKN,SAAS,CAACvB,OAAQ6B,EAAKD,MAAM5B,OAAOmC,OAAOD,EAAQA,8CASpE,IAAAE,EAAAnB,KACDoB,EAAepB,KAAKW,MAAM5B,OAAOsC,OAAO,SAAAtC,GAC9C,OAAOA,EAAOb,KAAKoD,cAAcC,SAASJ,EAAKR,MAAMpB,YAAY+B,iBAEjE,OACE5C,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,MAAA,CAAK4C,IAAKC,EAAQ,IAAiBC,IAAI,iBAAiBvD,OAAO,MAAMwD,MAAM,QAC3EjD,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,YAAd,kBACAH,EAAAC,EAAAC,cAACgD,EAAD,CAAWpC,aAAcQ,KAAKI,iBAC9B1B,EAAAC,EAAAC,cAACiD,EAAD,CAAU9C,OAAQqC,YAhCRU,EAAAA,WCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACR3D,EAAAC,EAAAC,cAAA,MAAA,KACCF,EAAAC,EAAAC,cAAC0D,EAAD,OAGCC,SAASC,eAAe,SDsHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7B,KAAK,SAAA8B,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/swlogo.677d897f.png\\\";\",\"import React from 'react';\\n\\nconst Card = ({name, height, mass, hair_color, eye_color, birth_year, gender, id}) => {\\n\\treturn (\\n\\t\\t<div className='tc bg-light-blue dib br3 pa3 ma2 grow bw5 shadow-5'>\\n\\t\\t\\t<h1>{name}</h1>\\n\\t\\t\\t<h4>Height: {height}</h4>\\n\\t\\t\\t<h4>Mass: {mass}</h4>\\n\\t\\t\\t<h4>Hair Colour: {hair_color}</h4>\\n\\t\\t\\t<h4>Birth Year: {birth_year}</h4>\\n\\t\\t\\t<h4>Eye Colour: {eye_color}</h4>\\n\\t\\t\\t<h4>Gender: {gender}</h4>\\n\\t\\t</div>\\n\\t);\\n}\\n\\nexport default Card;\\n\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ people }) => {\\n\\treturn (\\n\\t\\t<div>\\n\\t\\t\\t{\\n\\t\\t\\t\\tpeople.map((user, i) => {\\n\\t\\t\\t\\treturn (\\n\\t\\t\\t\\t<Card \\n\\t\\t\\t\\tkey={i} \\n\\t\\t\\t\\tname={people[i].name} \\n\\t\\t\\t\\thomeland={people[i].homeland} \\n\\t\\t\\t\\tmass={people[i].mass}\\n\\t\\t\\t\\tgender={people[i].gender}\\n\\t\\t\\t\\teye_color={people[i].eye_color}\\n\\t\\t\\t\\thair_color={people[i].hair_color}\\n\\t\\t\\t\\theight={people[i].height}\\n\\t\\t\\t\\tbirth_year=\\t{people[i].birth_year}\\n\\t\\t\\t\\t/> \\n\\t\\t\\t\\t) \\n\\t\\t\\t\\t})\\n\\n\\t\\t\\t}\\t\\t\\n\\t\\t</div> \\n\\t);\\n}\\n\\n\\n\\n\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({searchfield, searchChange}) => {\\n\\treturn (\\n\\t\\t<div className='pa2'>\\n\\t\\t\\t<input \\n\\t\\t\\tclassName='pa3 ba b--green bg-lightest-blue'\\n\\t\\t\\ttype='search' \\n\\t\\t\\tplaceholder='Type character name..'\\n\\t\\t\\tonChange={searchChange} \\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t);\\n}\\n\\nexport default SearchBox;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport CardList from './CardList';\\nimport SearchBox from './SearchBox';\\n\\nclass App extends Component {\\n  constructor() {\\n    super()\\n    this.state = {\\n      people: [],\\n      searchfield: '' \\n    }\\n  }\\n\\n  componentDidMount() {\\n    var i;\\n    for (i=1;i < 9;i++) {\\n       fetch('https://swapi.co/api/people/?page=' + [i])\\n      .then(resp=>  resp.json())\\n      .then(results=>  this.setState({people: this.state.people.concat(results.results)}))\\n    }\\n  }\\n  \\n  onSearchChange = (event) => {\\n      this.setState({ searchfield: event.target.value })\\n      console.log(event.target.value)\\n  }\\n\\n  render() {\\n    const filterPeople = this.state.people.filter(people => {\\n    return people.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\\n  }) \\n    return (\\n      <div className='tc'>\\n        <img src={require('./swlogo.png')} alt=\\\"Star Wars logo\\\" height=\\\"200\\\" width=\\\"350\\\"></img>\\n        <h1 className='subtitle'>Knowledge base</h1>\\n        <SearchBox searchChange={this.onSearchChange}/>\\n        <CardList people={filterPeople} />        \\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport 'tachyons';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\nReactDOM.render(\\n\\t<div>\\n\\t\\t<App />\\n\\t</div>\\n\\n\\t, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{13:function(e,t,a){},17:function(e,t,a){},19:function(e,t,a){e.exports=a.p+\"static/media/swlogo.677d897f.png\"},20:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),o=a(2),l=a.n(o),c=(a(13),a(15),a(3)),i=a(4),s=a(6),h=a(5),u=a(7),m=(a(17),function(e){var t=e.name,a=e.height,n=e.mass,o=e.hair_color,l=e.eye_color,c=e.birth_year,i=e.gender;e.id;return r.a.createElement(\"div\",{className:\"tc bg-light-blue dib br3 pa3 ma2 grow bw5 shadow-5\"},r.a.createElement(\"h1\",null,t),r.a.createElement(\"h4\",null,\"Height: \",a),r.a.createElement(\"h4\",null,\"Mass: \",n),r.a.createElement(\"h4\",null,\"Hair Colour: \",o),r.a.createElement(\"h4\",null,\"Birth Year: \",c),r.a.createElement(\"h4\",null,\"Eye Colour: \",l),r.a.createElement(\"h4\",null,\"Gender: \",i))}),p=function(e){var t=e.people;return r.a.createElement(\"div\",null,t.map(function(e,a){return r.a.createElement(m,{key:a,name:t[a].name,homeland:t[a].homeland,mass:t[a].mass,gender:t[a].gender,eye_color:t[a].eye_color,hair_color:t[a].hair_color,height:t[a].height,birth_year:t[a].birth_year})}))},d=function(e){e.searchfield;var t=e.searchChange;return r.a.createElement(\"div\",{className:\"pa2\"},r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"Type character name..\",onChange:t}))},g=function(e){function t(){var e;return Object(c.a)(this,t),(e=Object(s.a)(this,Object(h.a)(t).call(this))).onSearchChange=function(t){e.setState({searchfield:t.target.value}),console.log(t.target.value)},e.state={people:[],searchfield:\"\"},e}return Object(u.a)(t,e),Object(i.a)(t,[{key:\"componentDidMount\",value:function(){var e,t=this;for(e=1;e<9;e++)fetch(\"https://swapi.co/api/people/?page=\"+[e]).then(function(e){return e.json()}).then(function(e){return t.setState({people:t.state.people.concat(e.results)})})}},{key:\"render\",value:function(){var e=this,t=this.state.people.filter(function(t){return t.name.toLowerCase().includes(e.state.searchfield.toLowerCase())});return r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"img\",{src:a(19),alt:\"Star Wars logo\",height:\"200\",width:\"350\"}),r.a.createElement(\"h1\",{className:\"subtitle\"},\"Knowledge base\"),r.a.createElement(d,{searchChange:this.onSearchChange}),r.a.createElement(p,{people:t}))}}]),t}(n.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(\"div\",null,r.a.createElement(g,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(20)}},[[8,2,1]]]);","extractedComments":[]}